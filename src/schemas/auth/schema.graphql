extend type Mutation {
  auth: AuthMutation!
}

type AuthMutation {
  """
  Returns Access and refresh tokens
  """
  getAccessToken(
    login: String!,
    password: String!
    ): TokensBag!

  """
  Refresh and return new Access and refresh tokens
  """
  refreshToken(token: String!): TokensBag!

    """
  Revoke some token
  """
  revokeToken(
    """
    Token ID
    """
    id: ID!
  ): Boolean

  """
  Revoke All tokens
  """
  revokeAllTokens(
    """"
    Account ID
    """
    id: ID!
  ): Boolean
}

"""
Response data when authentification is success
"""
type TokensBag {
  accessToken: AccessTokenBag!
  refreshToken: RefreshTokenBag!
}

enum TokenType {
  access
  refresh
}

type AccessTokenBag {
  token: String!
  payload: AccessTokenPayload!
}

type RefreshTokenBag {
  token: String!
  payload: RefreshTokenPayload!
}

type AccessTokenPayload {
  type: TokenType!
  id: ID!
  uuid: String!
  roles: [String!]!
  exp: Int!
  iss: String!
}

type RefreshTokenPayload {
  type: TokenType!
  id: ID!
  associated: String!
  uuid: String!
  roles: [String!]!
  exp: Int!
  iss: String!
}

