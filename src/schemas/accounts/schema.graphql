extend type Query {
  accounts: AccountsQuery!
}

extend type Mutation {
  accounts: AccountsMutation!
}

scalar AccountRole

"""
Account status
"""
enum AccountStatus {
  allowed
  forbidden
}

enum AccountOrderField {
  name
  login
  createdAt
  updatedAt
}


"""
Account edge bundle
"""
type AccountsEdge implements Edge {
  node: Account!
  cursor: String!
}

"""
Accounts module queries
"""
type AccountsQuery {

  """
  Returns Accounts list bundle
  """
  list(
    first: Int
    last: Int
    after: String
    before: String
    status: AccountStatus
    orderBy: AccountOrderBy
  ): AccountListConnection!

  """
  Returns Account statuses list
  """
  statusesList: [AccountStatus!]!
}


type AccountsMutation {
  updateAccount(
    id: ID!
    data: InputAccountData!
  ): Account!
}


"""
Ordering options for accounts returned from the connection
"""
input AccountOrderBy {
  field: AccountOrderField!
  direction: OrderDirection!
}


"""
Account data
"""
type Account implements Node {
  id: ID!
  name: String!
  login: String
  password: String
  status: AccountStatus
  createdAt: DateTime!
  updatedAt: DateTime!
  roles: [AccountRole]
}


"""
Possible data to driver update
"""
input InputAccountData {
  name: String
  login: String
  password: String
  status: AccountStatus
  roles: [AccountRole]
}


"""
Accounts list bundle
"""
type AccountListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AccountsEdge]!
}
