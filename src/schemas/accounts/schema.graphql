extend type Query {
  accounts: AccountsQuery!
}


"""
Account status
"""
enum AccountStatus {
  allowed
  forbidden
}

enum AccountOrderField {
  name
  login
  createdAt
  updatedAt
}


"""
Account adge bundle
"""
type AccountsEdge implements Edge {
  node: Account!
  cursor: String!
}

"""
Accounts module queries
"""
type AccountsQuery {

  """
  Returns Accounts list bundle
  """
  list(
    first: Int
    last: Int
    after: String
    before: String
    status: AccountStatus
    orderBy: AccountOrderBy
  ): AccountListConnection!
}

"""
Ordering options for accounts returned from the connection
"""
input AccountOrderBy {
  field: AccountOrderField!
  direction: OrderDirection!
}


"""
Account object
"""
type Account implements Node {
  id: ID!
  name: String!
  login: String!
  password: String!
  status: AccountStatus!
  createdAt: Date!
  updatedAt: Date!
  roles: [String]!
}

"""
Accounts list bundle
"""
type AccountListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AccountsEdge]!
}
