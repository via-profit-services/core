extend type Query {
  accounts: AccountsQuery!
}

extend type Mutation {
  accounts: AccountsMutation!
}

scalar String

"""
Account status
"""
enum AccountStatus {
  allowed
  forbidden
}

enum AccountOrderField {
  name
  login
  createdAt
  updatedAt
}

enum TokenType {
  access
  refresh
}


"""
Account edge bundle
"""
type AccountsEdge implements Edge {
  node: Account!
  cursor: String!
}

"""
Accounts module queries
"""
type AccountsQuery {

  """
  Returns Accounts list bundle
  """
  list(
    first: Int
    last: Int
    after: String
    before: String
    status: AccountStatus
    orderBy: AccountOrderBy
  ): AccountListConnection!

  """
  Returns Account statuses list
  """
  statusesList: [AccountStatus!]!

  """
  Returns Your account data
  """
  me: Account!

  """
  Returns Your Access Token payload
  """
  token: AccessTokenPayload!

  """
  Returns account by ID
  """
  account(id: ID!): Account!
}


type AccessTokenPayload {
  type: TokenType!
  id: ID!
  uuid: String!
  roles: [String!]!
  exp: Int!
  iss: String!
}


type AccountsMutation {
  
  """
  Update existings account
  """
  updateAccount(
    id: ID!
    data: InputAccountUpdateData!
  ): Account!

  """
  Create new Account
  """
  createAccount(
    data: InputAccountCreateData!
  ): Account!

  """
  Delete account
  """
  deleteAccount(
    id: ID!
  ): Boolean!

  """
  Revoke some token
  """
  revokeToken(
    id: ID!
  ): Boolean!

  """
  Revoke All account tokens
  """
  revokeAllAccountTokens(
    id: ID!
  ): Boolean!
}


"""
Ordering options for accounts returned from the connection
"""
input AccountOrderBy {
  field: AccountOrderField!
  direction: OrderDirection!
}


"""
Account data
"""
type Account implements Node {
  id: ID!
  name: String!
  login: String!
  password: String!
  status: AccountStatus!
  createdAt: DateTime!
  updatedAt: DateTime!
  roles: [String!]!
}


"""
Possible data to driver update
"""
input InputAccountUpdateData {
  id: String
  name: String
  login: String
  password: String
  status: AccountStatus
  roles: [String!]
}

"""
Possible data to create new account
"""
input InputAccountCreateData {
  id: String
  name: String!
  login: String!
  password: String!
  status: AccountStatus!
  roles: [String!]!
}



"""
Accounts list bundle
"""
type AccountListConnection implements Connection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [AccountsEdge]!
}
